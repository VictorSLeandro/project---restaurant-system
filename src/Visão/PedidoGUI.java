/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package Visão;

import Controlador.ControladorCliente;
import Controlador.ControladorItemsPedidos;
import Controlador.ControladorPedidos;
import Controlador.ControladorProduto;
import DAO.ClienteDAO;
import DAO.ConexaoDAO;
import DAO.ItemsPedidosDAO;
import DAO.PedidoDAO;
import DAO.ProdutoDAO;
import Persistencia.Cliente;
import Persistencia.ItemPedido;
import Persistencia.Mesa;
import Persistencia.Pedido;
import Persistencia.Produto;
import Persistencia.TabelaAuxiliar;
import com.mysql.jdbc.PreparedStatement;
import java.awt.Color;
import java.awt.Component;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import static java.lang.Thread.sleep;
import java.sql.Connection;
import java.sql.ResultSet;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.GregorianCalendar;
import java.util.HashMap;
import javax.swing.ComboBoxModel;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import net.sf.jasperreports.engine.JRResultSetDataSource;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author victor
 */
public class PedidoGUI extends javax.swing.JFrame {
     public void iniciaRelogio(){
        new Thread(){//instancia nova thread já implementando o método run()
        @Override
        public void run() {//sobrescreve o método run()
        while(0 == 0){//while para fazer o loop infinito
        GregorianCalendar gc = new GregorianCalendar();//novo gregorian calendar, onde temos a data atual
        int hora = gc.get(Calendar.HOUR_OF_DAY);//pega as horas
        int minuto = gc.get(Calendar.MINUTE);//pega os minutos
        int segundo = gc.get(Calendar.SECOND);//pega os segundos
        String horaString;//nova string horas
        String minString;//nova string minutos
        String segundoString;//nova string segundos
        if(hora < 10){//se hora for menor que 10 precisa colocar um 0 à esquerda
        horaString = "0"+hora;
        }else{
        horaString = ""+hora;
        }
        if(minuto < 10){//se minuto for menor que 10 precisa colocar um 0 à esquerda
        minString = "0"+minuto;
        }
        else{
                minString = ""+minuto;
        }
        if(segundo < 10){//se segundo for menor que 10 precisa colocar um 0 à esquerda
        segundoString = "0"+segundo;
        }
        else{
                segundoString = ""+segundo;
        }
        txtHora.setText(horaString+":"+minString+":"+segundoString);//seta hora atual no label
      try{
        sleep(1000);//faz a thread entrar em estado de espera por 1000 milissegundos ou 1 segundo       
      }
        catch(Exception e){}

        }
       }
    }
        .start();//inicia a thread.
}
           SimpleDateFormat formatador = new SimpleDateFormat ("dd/MM/yyyy");
           Cliente cli = new Cliente();
           Mesa me = new Mesa();
           Pedido ped = new Pedido ();
           ItemPedido itemPedido= new ItemPedido();
           ControladorItemsPedidos contr_item = new ControladorItemsPedidos();
           ControladorPedidos contr = new ControladorPedidos();
           ConexaoDAO conn = new ConexaoDAO();
           Produto prod = new Produto();
           ItemsPedidosDAO ID = new ItemsPedidosDAO();
           TabelaAuxiliar Ta = new TabelaAuxiliar();
           PedidoDAO PD = new PedidoDAO();
   
    public void limpaCampos(){
        TxtCodigoProduto.setText("");

        TxtQuant.setText("");
        
        txtHora.setText("");
        txtPrecoProd.setText("");
        TxtTotalPedido.setText("");
        
        
    }
    
 

    
    public PedidoGUI() {
        initComponents();
       iniciaRelogio();
        Date data = new Date();
        txtData.setDate(data);
        //TxtCodigoProduto.enable(false);
        //TxtNomeCliente.enable(false);
        //TxtQuant.enable(false);
        //txtCPFCliente.enable(false);
        //txtHora.enable(false);
        //txtPrecoProd.enable(false);
          
       
        
        
         
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        jScrollPane4 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        AbaPedidos = new javax.swing.JTabbedPane();
        jPanel4 = new javax.swing.JPanel();
        btnmesa7 = new javax.swing.JLabel();
        btnmesa6 = new javax.swing.JLabel();
        btnmesa5 = new javax.swing.JLabel();
        btnmesa4 = new javax.swing.JLabel();
        btnmesa3 = new javax.swing.JLabel();
        btnmesa2 = new javax.swing.JLabel();
        btnmesa1 = new javax.swing.JLabel();
        btnmesa8 = new javax.swing.JLabel();
        btnmesa9 = new javax.swing.JLabel();
        btnmesa10 = new javax.swing.JLabel();
        btnmesa11 = new javax.swing.JLabel();
        btnmesa12 = new javax.swing.JLabel();
        btnmesa13 = new javax.swing.JLabel();
        btnmesa14 = new javax.swing.JLabel();
        btnmesa15 = new javax.swing.JLabel();
        btnmesa16 = new javax.swing.JLabel();
        btnmesa17 = new javax.swing.JLabel();
        btnmesa18 = new javax.swing.JLabel();
        btnmesa19 = new javax.swing.JLabel();
        btnmesa20 = new javax.swing.JLabel();
        btnmesa21 = new javax.swing.JLabel();
        btnmesa22 = new javax.swing.JLabel();
        btnmesa23 = new javax.swing.JLabel();
        btnmesa24 = new javax.swing.JLabel();
        btnmesa25 = new javax.swing.JLabel();
        btnmesa26 = new javax.swing.JLabel();
        btnmesa27 = new javax.swing.JLabel();
        btnmesa28 = new javax.swing.JLabel();
        btnmesa30 = new javax.swing.JLabel();
        btnmesa29 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        TxtCodigoProduto = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        cbm_desc = new javax.swing.JComboBox();
        cbm_catProduto = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();
        TxtQuant = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtPrecoProd = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        TxtTotalPedido = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        txtData = new com.toedter.calendar.JDateChooser();
        jLabel11 = new javax.swing.JLabel();
        txtHora = new javax.swing.JFormattedTextField();
        btnGerarPedido = new javax.swing.JButton();
        btnFinalizaPedido = new javax.swing.JButton();
        jScrollPane5 = new javax.swing.JScrollPane();
        TabelaItemPedidos = new javax.swing.JTable();
        jLabel14 = new javax.swing.JLabel();
        lblNumMesa = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        btnAddItem = new javax.swing.JButton();
        TxtObs = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        TxtSubTotal = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        TxtPagou = new javax.swing.JTextField();
        btnNotaCozinha = new javax.swing.JButton();

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane4.setViewportView(jTable2);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        org.jdesktop.beansbinding.Binding binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("true"), this, org.jdesktop.beansbinding.BeanProperty.create("undecorated"));
        bindingGroup.addBinding(binding);

        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jPanel4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel4MouseClicked(evt);
            }
        });

        btnmesa7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/mesafechada.png"))); // NOI18N
        btnmesa7.setText("7");
        btnmesa7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnmesa7MouseClicked(evt);
            }
        });

        btnmesa6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/mesafechada.png"))); // NOI18N
        btnmesa6.setText("6");
        btnmesa6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnmesa6MouseClicked(evt);
            }
        });

        btnmesa5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/mesafechada.png"))); // NOI18N
        btnmesa5.setText("5");
        btnmesa5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnmesa5MouseClicked(evt);
            }
        });

        btnmesa4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/mesafechada.png"))); // NOI18N
        btnmesa4.setText("4");
        btnmesa4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnmesa4MouseClicked(evt);
            }
        });

        btnmesa3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/mesafechada.png"))); // NOI18N
        btnmesa3.setText("3");
        btnmesa3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnmesa3MouseClicked(evt);
            }
        });

        btnmesa2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/mesafechada.png"))); // NOI18N
        btnmesa2.setText("2");
        btnmesa2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnmesa2MouseClicked(evt);
            }
        });

        btnmesa1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/mesafechada.png"))); // NOI18N
        btnmesa1.setText("1");
        btnmesa1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnmesa1MouseClicked(evt);
            }
        });

        btnmesa8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/mesafechada.png"))); // NOI18N
        btnmesa8.setText("8");
        btnmesa8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnmesa8MouseClicked(evt);
            }
        });

        btnmesa9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/mesafechada.png"))); // NOI18N
        btnmesa9.setText("9");
        btnmesa9.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnmesa9MouseClicked(evt);
            }
        });

        btnmesa10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/mesafechada.png"))); // NOI18N
        btnmesa10.setText("10");
        btnmesa10.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnmesa10MouseClicked(evt);
            }
        });

        btnmesa11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/mesafechada.png"))); // NOI18N
        btnmesa11.setText("11");
        btnmesa11.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnmesa11MouseClicked(evt);
            }
        });

        btnmesa12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/mesafechada.png"))); // NOI18N
        btnmesa12.setText("12");
        btnmesa12.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnmesa12MouseClicked(evt);
            }
        });

        btnmesa13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/mesafechada.png"))); // NOI18N
        btnmesa13.setText("13");
        btnmesa13.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnmesa13MouseClicked(evt);
            }
        });

        btnmesa14.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/mesafechada.png"))); // NOI18N
        btnmesa14.setText("14");
        btnmesa14.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnmesa14MouseClicked(evt);
            }
        });

        btnmesa15.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/mesafechada.png"))); // NOI18N
        btnmesa15.setText("15");
        btnmesa15.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnmesa15MouseClicked(evt);
            }
        });

        btnmesa16.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/mesafechada.png"))); // NOI18N
        btnmesa16.setText("16");
        btnmesa16.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnmesa16MouseClicked(evt);
            }
        });

        btnmesa17.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/mesafechada.png"))); // NOI18N
        btnmesa17.setText("17");
        btnmesa17.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnmesa17MouseClicked(evt);
            }
        });

        btnmesa18.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/mesafechada.png"))); // NOI18N
        btnmesa18.setText("18");
        btnmesa18.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnmesa18MouseClicked(evt);
            }
        });

        btnmesa19.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/mesafechada.png"))); // NOI18N
        btnmesa19.setText("19");
        btnmesa19.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnmesa19MouseClicked(evt);
            }
        });

        btnmesa20.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/mesafechada.png"))); // NOI18N
        btnmesa20.setText("20");
        btnmesa20.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnmesa20MouseClicked(evt);
            }
        });

        btnmesa21.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/mesafechada.png"))); // NOI18N
        btnmesa21.setText("21");
        btnmesa21.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnmesa21MouseClicked(evt);
            }
        });

        btnmesa22.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/mesafechada.png"))); // NOI18N
        btnmesa22.setText("22");
        btnmesa22.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnmesa22MouseClicked(evt);
            }
        });

        btnmesa23.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/mesafechada.png"))); // NOI18N
        btnmesa23.setText("23");
        btnmesa23.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnmesa23MouseClicked(evt);
            }
        });

        btnmesa24.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/mesafechada.png"))); // NOI18N
        btnmesa24.setText("24");
        btnmesa24.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnmesa24MouseClicked(evt);
            }
        });

        btnmesa25.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/mesafechada.png"))); // NOI18N
        btnmesa25.setText("25");
        btnmesa25.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnmesa25MouseClicked(evt);
            }
        });

        btnmesa26.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/mesafechada.png"))); // NOI18N
        btnmesa26.setText("26");
        btnmesa26.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnmesa26MouseClicked(evt);
            }
        });

        btnmesa27.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/mesafechada.png"))); // NOI18N
        btnmesa27.setText("27");
        btnmesa27.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnmesa27MouseClicked(evt);
            }
        });

        btnmesa28.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/mesafechada.png"))); // NOI18N
        btnmesa28.setText("28");
        btnmesa28.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnmesa28MouseClicked(evt);
            }
        });

        btnmesa30.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/mesafechada.png"))); // NOI18N
        btnmesa30.setText("30");
        btnmesa30.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnmesa30MouseClicked(evt);
            }
        });

        btnmesa29.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/mesafechada.png"))); // NOI18N
        btnmesa29.setText("29");
        btnmesa29.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnmesa29MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(btnmesa29)
                        .addGap(43, 43, 43)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnmesa30)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(btnmesa23)
                                .addGap(50, 50, 50)
                                .addComponent(btnmesa24))))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(btnmesa1)
                                .addGap(52, 52, 52)
                                .addComponent(btnmesa2)
                                .addGap(59, 59, 59)
                                .addComponent(btnmesa3)
                                .addGap(42, 42, 42)
                                .addComponent(btnmesa4)
                                .addGap(36, 36, 36)
                                .addComponent(btnmesa5))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btnmesa8)
                                    .addComponent(btnmesa15))
                                .addGap(43, 43, 43)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btnmesa9)
                                    .addComponent(btnmesa16))
                                .addGap(50, 50, 50)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btnmesa10)
                                    .addComponent(btnmesa17))
                                .addGap(42, 42, 42)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(jPanel4Layout.createSequentialGroup()
                                        .addComponent(btnmesa11)
                                        .addGap(26, 26, 26)
                                        .addComponent(btnmesa12))
                                    .addGroup(jPanel4Layout.createSequentialGroup()
                                        .addComponent(btnmesa18)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(btnmesa19)))))
                        .addGap(37, 37, 37)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btnmesa6)
                                    .addComponent(btnmesa13))
                                .addGap(36, 36, 36)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btnmesa14)
                                    .addComponent(btnmesa7)))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btnmesa27)
                                    .addComponent(btnmesa20))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(btnmesa21)
                                    .addComponent(btnmesa28)))))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(btnmesa22)
                        .addGap(299, 299, 299)
                        .addComponent(btnmesa25)
                        .addGap(26, 26, 26)
                        .addComponent(btnmesa26)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnmesa7)
                        .addComponent(btnmesa6))
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnmesa5)
                        .addComponent(btnmesa4))
                    .addComponent(btnmesa3)
                    .addComponent(btnmesa2)
                    .addComponent(btnmesa1))
                .addGap(28, 28, 28)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnmesa14)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnmesa12)
                        .addComponent(btnmesa11)
                        .addComponent(btnmesa13))
                    .addComponent(btnmesa10)
                    .addComponent(btnmesa9)
                    .addComponent(btnmesa8))
                .addGap(26, 26, 26)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnmesa15)
                    .addComponent(btnmesa16)
                    .addComponent(btnmesa17)
                    .addComponent(btnmesa18)
                    .addComponent(btnmesa19)
                    .addComponent(btnmesa20)
                    .addComponent(btnmesa21))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnmesa22)
                    .addComponent(btnmesa23)
                    .addComponent(btnmesa25)
                    .addComponent(btnmesa26)
                    .addComponent(btnmesa27)
                    .addComponent(btnmesa28)
                    .addComponent(btnmesa24))
                .addGap(29, 29, 29)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnmesa30)
                    .addComponent(btnmesa29))
                .addContainerGap(303, Short.MAX_VALUE))
        );

        AbaPedidos.addTab("Mesas", jPanel4);

        jPanel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel1MouseClicked(evt);
            }
        });
        jPanel1.setLayout(null);

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Produto:"));

        jLabel1.setText("Código de Produto");

        TxtCodigoProduto.setEnabled(false);
        TxtCodigoProduto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                TxtCodigoProdutoKeyPressed(evt);
            }
        });

        jLabel2.setText("Descrição");

        jLabel3.setText("Categoria");

        cbm_desc.setEnabled(false);
        cbm_desc.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cbm_descMouseClicked(evt);
            }
        });
        cbm_desc.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbm_descItemStateChanged(evt);
            }
        });
        cbm_desc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbm_descActionPerformed(evt);
            }
        });
        cbm_desc.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                cbm_descFocusGained(evt);
            }
        });
        cbm_desc.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                cbm_descKeyPressed(evt);
            }
        });

        cbm_catProduto.setEnabled(false);
        cbm_catProduto.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbm_catProdutoItemStateChanged(evt);
            }
        });
        cbm_catProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbm_catProdutoActionPerformed(evt);
            }
        });
        cbm_catProduto.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                cbm_catProdutoFocusGained(evt);
            }
        });
        cbm_catProduto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                cbm_catProdutoKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(TxtCodigoProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(cbm_desc, javax.swing.GroupLayout.PREFERRED_SIZE, 392, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(39, 39, 39)
                        .addComponent(jLabel2)))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(cbm_catProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(TxtCodigoProduto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(cbm_desc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(cbm_catProduto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel1.add(jPanel2);
        jPanel2.setBounds(0, 0, 800, 97);
        jPanel1.add(jLabel4);
        jLabel4.setBounds(184, 123, 0, 0);

        TxtQuant.setEnabled(false);
        jPanel1.add(TxtQuant);
        TxtQuant.setBounds(12, 146, 160, 27);

        jLabel5.setText("Quantidade");
        jPanel1.add(jLabel5);
        jLabel5.setBounds(83, 123, 82, 17);

        jLabel6.setText("Preço unitario");
        jPanel1.add(jLabel6);
        jLabel6.setBounds(70, 179, 97, 17);

        txtPrecoProd.setEnabled(false);
        jPanel1.add(txtPrecoProd);
        txtPrecoProd.setBounds(12, 208, 160, 27);

        jLabel9.setFont(new java.awt.Font("Ubuntu", 0, 24)); // NOI18N
        jLabel9.setText("Total:");
        jPanel1.add(jLabel9);
        jLabel9.setBounds(30, 520, 62, 28);

        TxtTotalPedido.setEnabled(false);
        TxtTotalPedido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TxtTotalPedidoActionPerformed(evt);
            }
        });
        jPanel1.add(TxtTotalPedido);
        TxtTotalPedido.setBounds(110, 520, 120, 27);

        jLabel10.setText("Data:");
        jPanel1.add(jLabel10);
        jLabel10.setBounds(250, 520, 37, 17);

        txtData.setMaxSelectableDate(new java.util.Date(1420081297000L));
        txtData.setMinSelectableDate(new java.util.Date(1388458897000L));
        txtData.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtDataFocusGained(evt);
            }
        });
        jPanel1.add(txtData);
        txtData.setBounds(290, 520, 154, 27);

        jLabel11.setText("Horario:");
        jPanel1.add(jLabel11);
        jLabel11.setBounds(460, 520, 56, 17);

        txtHora.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(java.text.DateFormat.getTimeInstance(java.text.DateFormat.SHORT))));
        jPanel1.add(txtHora);
        txtHora.setBounds(520, 520, 129, 27);

        btnGerarPedido.setText("Gerar Pedido");
        btnGerarPedido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGerarPedidoActionPerformed(evt);
            }
        });
        jPanel1.add(btnGerarPedido);
        btnGerarPedido.setBounds(110, 610, 102, 29);

        btnFinalizaPedido.setText("Finalizar Pedido");
        btnFinalizaPedido.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnFinalizaPedidoMouseClicked(evt);
            }
        });
        btnFinalizaPedido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFinalizaPedidoActionPerformed(evt);
            }
        });
        jPanel1.add(btnFinalizaPedido);
        btnFinalizaPedido.setBounds(230, 610, 150, 29);

        TabelaItemPedidos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        TabelaItemPedidos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TabelaItemPedidosMouseClicked(evt);
            }
        });
        jScrollPane5.setViewportView(TabelaItemPedidos);

        jPanel1.add(jScrollPane5);
        jScrollPane5.setBounds(200, 100, 610, 300);

        jLabel14.setFont(new java.awt.Font("Ubuntu", 0, 24)); // NOI18N
        jLabel14.setText("Mesa nº:");
        jPanel1.add(jLabel14);
        jLabel14.setBounds(500, 610, 94, 28);

        lblNumMesa.setFont(new java.awt.Font("Ubuntu", 0, 24)); // NOI18N
        lblNumMesa.setText("jLabel17");
        jPanel1.add(lblNumMesa);
        lblNumMesa.setBounds(600, 610, 93, 28);

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/back.png"))); // NOI18N
        jButton2.setText("Mesas");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton2);
        jButton2.setBounds(700, 520, 90, 40);

        btnAddItem.setText("Adicionar item");
        btnAddItem.setEnabled(false);
        btnAddItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddItemActionPerformed(evt);
            }
        });
        jPanel1.add(btnAddItem);
        btnAddItem.setBounds(40, 250, 110, 50);

        TxtObs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TxtObsActionPerformed(evt);
            }
        });
        TxtObs.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                TxtObsKeyPressed(evt);
            }
        });
        jPanel1.add(TxtObs);
        TxtObs.setBounds(120, 430, 690, 80);

        jLabel15.setFont(new java.awt.Font("Ubuntu", 0, 24)); // NOI18N
        jLabel15.setText("Pagou:");
        jPanel1.add(jLabel15);
        jLabel15.setBounds(20, 550, 76, 28);

        jLabel16.setFont(new java.awt.Font("Ubuntu", 0, 24)); // NOI18N
        jLabel16.setText("Troco:");
        jPanel1.add(jLabel16);
        jLabel16.setBounds(30, 580, 66, 28);

        TxtSubTotal.setEnabled(false);
        TxtSubTotal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TxtSubTotalActionPerformed(evt);
            }
        });
        jPanel1.add(TxtSubTotal);
        TxtSubTotal.setBounds(110, 580, 120, 27);

        jLabel17.setText("Observação:");
        jPanel1.add(jLabel17);
        jLabel17.setBounds(10, 460, 110, 17);

        TxtPagou.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TxtPagouActionPerformed(evt);
            }
        });
        TxtPagou.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                TxtPagouKeyPressed(evt);
            }
        });
        jPanel1.add(TxtPagou);
        TxtPagou.setBounds(110, 550, 120, 27);

        btnNotaCozinha.setText("Relatorio Cozinha");
        btnNotaCozinha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNotaCozinhaActionPerformed(evt);
            }
        });
        jPanel1.add(btnNotaCozinha);
        btnNotaCozinha.setBounds(20, 330, 160, 50);

        AbaPedidos.addTab("Manuntenção", new javax.swing.ImageIcon(getClass().getResource("/Imagens/process.png")), jPanel1); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(AbaPedidos, javax.swing.GroupLayout.DEFAULT_SIZE, 874, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(AbaPedidos, javax.swing.GroupLayout.PREFERRED_SIZE, 698, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        bindingGroup.bind();

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
       
   
    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
                  contr.listarProduto(cbm_desc); 
                   contr.ListarCategoria(cbm_catProduto);
               AbaPedidos.setEnabledAt( 1, false ); 
             
                        
    }//GEN-LAST:event_formWindowOpened

    private void jPanel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel1MouseClicked
        
    }//GEN-LAST:event_jPanel1MouseClicked

    private void TabelaItemPedidosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TabelaItemPedidosMouseClicked
       
            
    }//GEN-LAST:event_TabelaItemPedidosMouseClicked

    private void txtDataFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtDataFocusGained
        float total = Float.parseFloat(txtPrecoProd.getText())*Integer.parseInt(TxtQuant.getText());
    }//GEN-LAST:event_txtDataFocusGained

    private void TxtTotalPedidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TxtTotalPedidoActionPerformed
        float total = Float.parseFloat(txtPrecoProd.getText())*Integer.parseInt(TxtQuant.getText());

    }//GEN-LAST:event_TxtTotalPedidoActionPerformed

    private void cbm_catProdutoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cbm_catProdutoKeyPressed
        if(evt.getKeyCode()==KeyEvent.VK_ENTER){
            if(cbm_catProduto.getSelectedIndex()==0){
                cbm_desc.removeAllItems();
                contr.listarProduto(cbm_desc);
            }

            else {
                cbm_desc.removeAllItems();
                prod.setCategoria((String) cbm_catProduto.getSelectedItem());

                contr.FiltraCategoria(cbm_desc, prod);
            }
        }
    }//GEN-LAST:event_cbm_catProdutoKeyPressed

    private void cbm_catProdutoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cbm_catProdutoFocusGained

    }//GEN-LAST:event_cbm_catProdutoFocusGained

    private void cbm_catProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbm_catProdutoActionPerformed

    }//GEN-LAST:event_cbm_catProdutoActionPerformed

    private void cbm_catProdutoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbm_catProdutoItemStateChanged

    }//GEN-LAST:event_cbm_catProdutoItemStateChanged

    private void cbm_descKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cbm_descKeyPressed
        if(evt.getKeyCode()==KeyEvent.VK_ENTER){
            if(cbm_desc.getSelectedItem()==" "){
                TxtCodigoProduto.setText("");
                txtPrecoProd.setText("");
                TxtQuant.setText("");
            }
            else {
                prod.setDescrição((String) cbm_desc.getSelectedItem());

                contr.AtualizaCodProduto(prod);
                TxtCodigoProduto.setText(""+prod.getCodProduto());
                cbm_catProduto.setSelectedItem(prod.getCategoria());
                txtPrecoProd.setText(String.valueOf(prod.getPreco()));
                TxtQuant.setText("1");
            }
        }
    }//GEN-LAST:event_cbm_descKeyPressed

    private void cbm_descFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cbm_descFocusGained

    }//GEN-LAST:event_cbm_descFocusGained

    private void cbm_descActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbm_descActionPerformed

    }//GEN-LAST:event_cbm_descActionPerformed

    private void cbm_descItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbm_descItemStateChanged

    }//GEN-LAST:event_cbm_descItemStateChanged

    private void cbm_descMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cbm_descMouseClicked

    }//GEN-LAST:event_cbm_descMouseClicked

    private void TxtCodigoProdutoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TxtCodigoProdutoKeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){

            prod.setCodProduto(Integer.parseInt(TxtCodigoProduto.getText()));

            contr.BuscarProdutoCod(prod);
            cbm_desc.setSelectedItem(prod.getDescrição());
            cbm_catProduto.setSelectedItem(prod.getCategoria());
            txtPrecoProd.setText(String.valueOf(prod.getPreco()));
            TxtQuant.setText("1");
        }
    }//GEN-LAST:event_TxtCodigoProdutoKeyPressed

    private void btnmesa1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnmesa1MouseClicked
        me.setNumMesa(Integer.parseInt(btnmesa1.getText()));  
        me.setCodigoMesa(1);
        contr.EscolhaDaMesa(lblNumMesa, me);
        btnmesa1.setIcon(PD.VerificaStatus(me));
        AbaPedidos.setEnabledAt( 1, true);
        AbaPedidos.setSelectedIndex(1);
        AbaPedidos.setEnabledAt( 0, false);
       
            try {

                   int codPedido = 1;
                   
                    itemPedido.setCodPedido(codPedido);
                    
                    conn.conecta();
                    ResultSet rs = contr_item.listarItemPedido(itemPedido);
                    DefaultTableModel modelo =  ID.carregarTabela(rs);
                    TabelaItemPedidos.setModel(modelo);
                    TabelaItemPedidos.setSelectionBackground(Color.yellow);
                    
                  ped.setCodPedido(codPedido);
                  contr.BuscaPedido(ped, cli, btnGerarPedido, btnFinalizaPedido,  txtHora,  TxtTotalPedido, TxtCodigoProduto, TxtQuant, cbm_desc, cbm_catProduto, btnAddItem, btnNotaCozinha);
                   itemPedido.setCodPedido(codPedido);
                 contr_item.CalculaTotal(TxtTotalPedido, itemPedido, ped);
                  
                         }
                catch (Exception ex){
                    JOptionPane.showMessageDialog(null,"Erro ao buscar dados:"+ex.getMessage());
                }
               
        
      
      
    }//GEN-LAST:event_btnmesa1MouseClicked

    private void jPanel4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel4MouseClicked
        
    }//GEN-LAST:event_jPanel4MouseClicked

    private void btnmesa2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnmesa2MouseClicked
       
     
         me.setCodigoMesa(2);
        
        btnmesa2.setIcon(PD.VerificaStatus(me));
        
        me.setNumMesa(Integer.parseInt(btnmesa2.getText()));
      
        contr.EscolhaDaMesa(lblNumMesa, me);
        AbaPedidos.setEnabledAt( 1, true);
        AbaPedidos.setSelectedIndex(1);
        AbaPedidos.setEnabledAt( 0, false);
        
        try {

                   int codPedido = 2;
                   
                    itemPedido.setCodPedido(codPedido);
                    
                    conn.conecta();
                    ResultSet rs = contr_item.listarItemPedido(itemPedido);
                    DefaultTableModel modelo =  ID.carregarTabela(rs);
                    TabelaItemPedidos.setModel(modelo);
                    TabelaItemPedidos.setSelectionBackground(Color.yellow);
                    
                  ped.setCodPedido(codPedido);
                  contr.BuscaPedido(ped, cli, btnGerarPedido, btnFinalizaPedido,  txtHora,  TxtTotalPedido, TxtCodigoProduto, TxtQuant, cbm_desc, cbm_catProduto, btnAddItem, btnNotaCozinha);
                  
              
                  itemPedido.setCodItemPedidos(codPedido);
                 contr_item.CalculaTotal(TxtTotalPedido, itemPedido, ped);
                }
                catch (Exception ex){
                    JOptionPane.showMessageDialog(null,"Erro ao buscar dados:"+ex.getMessage());
                }
          
                  
        
        
    }//GEN-LAST:event_btnmesa2MouseClicked

    private void btnmesa3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnmesa3MouseClicked
        
 me.setCodigoMesa(3);
        
        btnmesa3.setIcon(PD.VerificaStatus(me));
                
        me.setNumMesa(Integer.parseInt(btnmesa3.getText()));
      
      contr.EscolhaDaMesa(lblNumMesa, me);
      AbaPedidos.setEnabledAt( 1, true);
      AbaPedidos.setSelectedIndex(1);
       AbaPedidos.setEnabledAt( 0, false);
             
       
          try {

                   int codPedido = 3;
                   
                    itemPedido.setCodPedido(codPedido);
                    
                    conn.conecta();
                    ResultSet rs = contr_item.listarItemPedido(itemPedido);
                    DefaultTableModel modelo =  ID.carregarTabela(rs);
                    TabelaItemPedidos.setModel(modelo);
                    TabelaItemPedidos.setSelectionBackground(Color.yellow);
                    
                  ped.setCodPedido(codPedido);
                  contr.BuscaPedido(ped, cli, btnGerarPedido, btnFinalizaPedido,  txtHora,  TxtTotalPedido, TxtCodigoProduto, TxtQuant, cbm_desc, cbm_catProduto, btnAddItem, btnNotaCozinha);
                  
                 
                  
                  itemPedido.setCodItemPedidos(codPedido);
                 contr_item.CalculaTotal(TxtTotalPedido, itemPedido, ped);
                }
                catch (Exception ex){
                    JOptionPane.showMessageDialog(null,"Erro ao buscar dados:"+ex.getMessage());
                }
        
        
        
       
       
       
    }//GEN-LAST:event_btnmesa3MouseClicked

    private void btnmesa4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnmesa4MouseClicked
         me.setCodigoMesa(4);
        
        btnmesa4.setIcon(PD.VerificaStatus(me));
        
        me.setNumMesa(Integer.parseInt(btnmesa4.getText()));
      
      contr.EscolhaDaMesa(lblNumMesa, me);
      AbaPedidos.setEnabledAt( 1, true);
      AbaPedidos.setSelectedIndex(1);
       AbaPedidos.setEnabledAt( 0, false);
       
         try {

                   int codPedido =4;
                   
                    itemPedido.setCodPedido(codPedido);
                    
                    conn.conecta();
                    ResultSet rs = contr_item.listarItemPedido(itemPedido);
                    DefaultTableModel modelo =  ID.carregarTabela(rs);
                    TabelaItemPedidos.setModel(modelo);
                    TabelaItemPedidos.setSelectionBackground(Color.yellow);
                    
                  ped.setCodPedido(codPedido);
                  contr.BuscaPedido(ped, cli, btnGerarPedido, btnFinalizaPedido,  txtHora,  TxtTotalPedido, TxtCodigoProduto, TxtQuant, cbm_desc, cbm_catProduto, btnAddItem, btnNotaCozinha);
                  
                 
                  
                  itemPedido.setCodItemPedidos(codPedido);
                 contr_item.CalculaTotal(TxtTotalPedido, itemPedido, ped);
                }
                catch (Exception ex){
                    JOptionPane.showMessageDialog(null,"Erro ao buscar dados:"+ex.getMessage());
                }
        
        
        
     
    }//GEN-LAST:event_btnmesa4MouseClicked

    private void btnmesa5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnmesa5MouseClicked
     me.setCodigoMesa(5);
        
        btnmesa5.setIcon(PD.VerificaStatus(me));
        
        me.setNumMesa(Integer.parseInt(btnmesa5.getText()));
      
            contr.EscolhaDaMesa(lblNumMesa, me);
            AbaPedidos.setEnabledAt( 1, true);
             AbaPedidos.setSelectedIndex(1);
            AbaPedidos.setEnabledAt( 0, false);
       
         try {

                   int codPedido = 5;
                   
                    itemPedido.setCodPedido(codPedido);
                    
                    conn.conecta();
                    ResultSet rs = contr_item.listarItemPedido(itemPedido);
                    DefaultTableModel modelo =  ID.carregarTabela(rs);
                    TabelaItemPedidos.setModel(modelo);
                    TabelaItemPedidos.setSelectionBackground(Color.yellow);
                    
                  ped.setCodPedido(codPedido);
                  contr.BuscaPedido(ped, cli, btnGerarPedido, btnFinalizaPedido,  txtHora,  TxtTotalPedido, TxtCodigoProduto, TxtQuant, cbm_desc, cbm_catProduto, btnAddItem, btnNotaCozinha);
                  
                  
                  itemPedido.setCodItemPedidos(codPedido);
                 contr_item.CalculaTotal(TxtTotalPedido, itemPedido, ped);
                }
                catch (Exception ex){
                    JOptionPane.showMessageDialog(null,"Erro ao buscar dados:"+ex.getMessage());
                }
        
        
        
     
    }//GEN-LAST:event_btnmesa5MouseClicked

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
         AbaPedidos.setEnabledAt( 0, true);
        AbaPedidos.setSelectedIndex(0);
        AbaPedidos.setEnabledAt(1,false);

                  txtHora.setText("");

                  TxtCodigoProduto.setText("");
                  TxtObs.setText("");
                  TxtQuant.setText("");
                  TxtSubTotal.setText("");
                  TxtTotalPedido.setText("");
                  txtPrecoProd.setText("");                 
               
    }//GEN-LAST:event_jButton2ActionPerformed

    private void btnGerarPedidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGerarPedidoActionPerformed
         
         if ((txtHora.getText().isEmpty())||(txtData.getDateFormatString().isEmpty())||(TxtObs.getText().isEmpty()))
         {
           JOptionPane.showMessageDialog(null,"Existem campos em branco");
         }
         else {
             int resposta = JOptionPane.showConfirmDialog(null,"Você deseja abrir pedido?");
             
             if (resposta == 0){
                 ped.setCodMesa(Integer.parseInt(lblNumMesa.getText()));
                 contr_item.AchaCodPedido(ped);
               int  codPedido = ped.getCodPedido();

                 ped.setCodPedido(codPedido);
                 ped.setData(formatador.format(txtData.getDate()));                 
                 ped.setHora(txtHora.getText());             
                 ped.setObeservação(TxtObs.getText());
                 
                 contr.CadastraPedido(ped);
                 btnGerarPedido.setEnabled(false);
                 btnFinalizaPedido.setEnabled(true);
                 TxtCodigoProduto.setEnabled(true);
                 TxtQuant.setEnabled(true);
                 txtPrecoProd.setEnabled(true);
                 cbm_catProduto.setEnabled(true);
                 cbm_desc.setEnabled(true);
                 btnAddItem.setEnabled(true);
                 btnNotaCozinha.setEnabled(true);
             }
         }
            
    }//GEN-LAST:event_btnGerarPedidoActionPerformed

    private void btnAddItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddItemActionPerformed
        
            ped.setCodMesa(Integer.parseInt(lblNumMesa.getText()));
            contr_item.AchaCodPedido(ped);

            int codPedido = ped.getCodPedido();

            itemPedido.setCodPedido(codPedido);
            itemPedido.setCodProduto(Integer.parseInt(TxtCodigoProduto.getText()));
            itemPedido.setQuantItemPedidos(Integer.parseInt(TxtQuant.getText()));
            float  soma = itemPedido.getQuantItemPedidos() * prod.getPreco();
            itemPedido.setTotal_produto(soma);
            contr_item.adicionaItem(itemPedido);
              try {



                        itemPedido.setCodPedido(codPedido);

                        conn.conecta();
                        ResultSet rs = contr_item.listarItemPedido(itemPedido);
                        DefaultTableModel modelo =  ID.carregarTabela(rs);
                        TabelaItemPedidos.setModel(modelo);
                        TabelaItemPedidos.setSelectionBackground(Color.yellow);

                   me.setCodigoMesa(Integer.parseInt(lblNumMesa.getText()));
                   me.setStatus("aberto");
                   PD.StatusMesa(me);
                     contr_item.CalculaTotal(TxtTotalPedido, itemPedido, ped);
                   ped.setTotalPedidos(Float.parseFloat(TxtTotalPedido.getText()));
                   ped.setCodPedido(codPedido);
                   PD.SalvaTotal(ped);
                    }
                    catch (Exception ex){
                        JOptionPane.showMessageDialog(null,"Erro ao buscar dados:"+ex.getMessage());
                    }
              
        
    }//GEN-LAST:event_btnAddItemActionPerformed

    private void TxtObsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TxtObsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TxtObsActionPerformed

    private void TxtSubTotalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TxtSubTotalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TxtSubTotalActionPerformed

    private void TxtObsKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TxtObsKeyPressed
       
    }//GEN-LAST:event_TxtObsKeyPressed

    private void btnmesa6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnmesa6MouseClicked
 me.setCodigoMesa(6);
        
        btnmesa6.setIcon(PD.VerificaStatus(me));
        
        me.setNumMesa(Integer.parseInt(btnmesa6.getText()));
      
            contr.EscolhaDaMesa(lblNumMesa, me);
            AbaPedidos.setEnabledAt( 1, true);
             AbaPedidos.setSelectedIndex(1);
            AbaPedidos.setEnabledAt( 0, false);
       
         try {

                   int codPedido = 6;
                   
                    itemPedido.setCodPedido(codPedido);
                    
                    conn.conecta();
                    ResultSet rs = contr_item.listarItemPedido(itemPedido);
                    DefaultTableModel modelo =  ID.carregarTabela(rs);
                    TabelaItemPedidos.setModel(modelo);
                    TabelaItemPedidos.setSelectionBackground(Color.yellow);
                    
                  ped.setCodPedido(codPedido);
                  contr.BuscaPedido(ped, cli, btnGerarPedido, btnFinalizaPedido,  txtHora,  TxtTotalPedido, TxtCodigoProduto, TxtQuant, cbm_desc, cbm_catProduto, btnAddItem, btnNotaCozinha);
                  
                  
                  itemPedido.setCodItemPedidos(codPedido);
                 contr_item.CalculaTotal(TxtTotalPedido, itemPedido, ped);
                }
                catch (Exception ex){
                    JOptionPane.showMessageDialog(null,"Erro ao buscar dados:"+ex.getMessage());
                }
        
    }//GEN-LAST:event_btnmesa6MouseClicked

    private void btnmesa7MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnmesa7MouseClicked
 me.setCodigoMesa(7);
        
        btnmesa7.setIcon(PD.VerificaStatus(me));
        
        me.setNumMesa(Integer.parseInt(btnmesa7.getText()));
      
            contr.EscolhaDaMesa(lblNumMesa, me);
            AbaPedidos.setEnabledAt( 1, true);
             AbaPedidos.setSelectedIndex(1);
            AbaPedidos.setEnabledAt( 0, false);
       
         try {

                   int codPedido = 7;
                   
                    itemPedido.setCodPedido(codPedido);
                    
                    conn.conecta();
                    ResultSet rs = contr_item.listarItemPedido(itemPedido);
                    DefaultTableModel modelo =  ID.carregarTabela(rs);
                    TabelaItemPedidos.setModel(modelo);
                    TabelaItemPedidos.setSelectionBackground(Color.yellow);
                    
                  ped.setCodPedido(codPedido);
                  contr.BuscaPedido(ped, cli, btnGerarPedido, btnFinalizaPedido,  txtHora,  TxtTotalPedido, TxtCodigoProduto, TxtQuant, cbm_desc, cbm_catProduto, btnAddItem, btnNotaCozinha);
                  
                  itemPedido.setCodItemPedidos(codPedido);
                 contr_item.CalculaTotal(TxtTotalPedido, itemPedido, ped);
                }
                catch (Exception ex){
                    JOptionPane.showMessageDialog(null,"Erro ao buscar dados:"+ex.getMessage());
                }
         
         
         
         
         
        
    }//GEN-LAST:event_btnmesa7MouseClicked

    private void btnmesa8MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnmesa8MouseClicked
 me.setCodigoMesa(8);
        
        btnmesa8.setIcon(PD.VerificaStatus(me));
        
        me.setNumMesa(Integer.parseInt(btnmesa8.getText()));
      
            contr.EscolhaDaMesa(lblNumMesa, me);
            AbaPedidos.setEnabledAt( 1, true);
             AbaPedidos.setSelectedIndex(1);
            AbaPedidos.setEnabledAt( 0, false);
       
         try {

                   int codPedido = 8;
                   
                    itemPedido.setCodPedido(codPedido);
                    
                    conn.conecta();
                    ResultSet rs = contr_item.listarItemPedido(itemPedido);
                    DefaultTableModel modelo =  ID.carregarTabela(rs);
                    TabelaItemPedidos.setModel(modelo);
                    TabelaItemPedidos.setSelectionBackground(Color.yellow);
                    
                  ped.setCodPedido(codPedido);
                  contr.BuscaPedido(ped, cli, btnGerarPedido, btnFinalizaPedido,  txtHora,  TxtTotalPedido, TxtCodigoProduto, TxtQuant, cbm_desc, cbm_catProduto, btnAddItem, btnNotaCozinha);
                  
                  
                  itemPedido.setCodItemPedidos(codPedido);
                 contr_item.CalculaTotal(TxtTotalPedido, itemPedido, ped);
                }
                catch (Exception ex){
                    JOptionPane.showMessageDialog(null,"Erro ao buscar dados:"+ex.getMessage());
                }
        
    }//GEN-LAST:event_btnmesa8MouseClicked

    private void btnmesa9MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnmesa9MouseClicked
         me.setCodigoMesa(9);
        
        btnmesa9.setIcon(PD.VerificaStatus(me));
        
        me.setNumMesa(Integer.parseInt(btnmesa9.getText()));
      
            contr.EscolhaDaMesa(lblNumMesa, me);
            AbaPedidos.setEnabledAt( 1, true);
             AbaPedidos.setSelectedIndex(1);
            AbaPedidos.setEnabledAt( 0, false);
       
         try {

                   int codPedido = 9;
                   
                    itemPedido.setCodPedido(codPedido);
                    
                    conn.conecta();
                    ResultSet rs = contr_item.listarItemPedido(itemPedido);
                    DefaultTableModel modelo =  ID.carregarTabela(rs);
                    TabelaItemPedidos.setModel(modelo);
                    TabelaItemPedidos.setSelectionBackground(Color.yellow);
                    
                  ped.setCodPedido(codPedido);
                  contr.BuscaPedido(ped, cli, btnGerarPedido, btnFinalizaPedido,  txtHora,  TxtTotalPedido, TxtCodigoProduto, TxtQuant, cbm_desc, cbm_catProduto, btnAddItem, btnNotaCozinha);
                  
                  
                  itemPedido.setCodItemPedidos(codPedido);
                 contr_item.CalculaTotal(TxtTotalPedido, itemPedido, ped);
                }
                catch (Exception ex){
                    JOptionPane.showMessageDialog(null,"Erro ao buscar dados:"+ex.getMessage());
                }
        
    }//GEN-LAST:event_btnmesa9MouseClicked

    private void btnmesa10MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnmesa10MouseClicked
         me.setCodigoMesa(10);
        
        btnmesa10.setIcon(PD.VerificaStatus(me));
        
        me.setNumMesa(Integer.parseInt(btnmesa10.getText()));
      
            contr.EscolhaDaMesa(lblNumMesa, me);
            AbaPedidos.setEnabledAt( 1, true);
             AbaPedidos.setSelectedIndex(1);
            AbaPedidos.setEnabledAt( 0, false);
       
         try {

                   int codPedido = 10;
                   
                    itemPedido.setCodPedido(codPedido);
                    
                    conn.conecta();
                    ResultSet rs = contr_item.listarItemPedido(itemPedido);
                    DefaultTableModel modelo =  ID.carregarTabela(rs);
                    TabelaItemPedidos.setModel(modelo);
                    TabelaItemPedidos.setSelectionBackground(Color.yellow);
                    
                  ped.setCodPedido(codPedido);
                  contr.BuscaPedido(ped, cli, btnGerarPedido, btnFinalizaPedido,  txtHora,  TxtTotalPedido, TxtCodigoProduto, TxtQuant, cbm_desc, cbm_catProduto, btnAddItem, btnNotaCozinha);
                  
                  
                  itemPedido.setCodItemPedidos(codPedido);
                 contr_item.CalculaTotal(TxtTotalPedido, itemPedido, ped);
                }
                catch (Exception ex){
                    JOptionPane.showMessageDialog(null,"Erro ao buscar dados:"+ex.getMessage());
                }
        
    }//GEN-LAST:event_btnmesa10MouseClicked

    private void btnmesa11MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnmesa11MouseClicked
         me.setCodigoMesa(11);
        
        btnmesa11.setIcon(PD.VerificaStatus(me));
        
        me.setNumMesa(Integer.parseInt(btnmesa11.getText()));
      
            contr.EscolhaDaMesa(lblNumMesa, me);
            AbaPedidos.setEnabledAt( 1, true);
             AbaPedidos.setSelectedIndex(1);
            AbaPedidos.setEnabledAt( 0, false);
       
         try {

                   int codPedido = 11;
                   
                    itemPedido.setCodPedido(codPedido);
                    
                    conn.conecta();
                    ResultSet rs = contr_item.listarItemPedido(itemPedido);
                    DefaultTableModel modelo =  ID.carregarTabela(rs);
                    TabelaItemPedidos.setModel(modelo);
                    TabelaItemPedidos.setSelectionBackground(Color.yellow);
                    
                  ped.setCodPedido(codPedido);
                  contr.BuscaPedido(ped, cli, btnGerarPedido, btnFinalizaPedido,  txtHora,  TxtTotalPedido, TxtCodigoProduto, TxtQuant, cbm_desc, cbm_catProduto, btnAddItem, btnNotaCozinha);
                  
                  
                  itemPedido.setCodItemPedidos(codPedido);
                 contr_item.CalculaTotal(TxtTotalPedido, itemPedido, ped);
                }
                catch (Exception ex){
                    JOptionPane.showMessageDialog(null,"Erro ao buscar dados:"+ex.getMessage());
                }
        
    }//GEN-LAST:event_btnmesa11MouseClicked

    private void btnmesa12MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnmesa12MouseClicked
         me.setCodigoMesa(12);
        
        btnmesa12.setIcon(PD.VerificaStatus(me));
        
        me.setNumMesa(Integer.parseInt(btnmesa12.getText()));
      
            contr.EscolhaDaMesa(lblNumMesa, me);
            AbaPedidos.setEnabledAt( 1, true);
             AbaPedidos.setSelectedIndex(1);
            AbaPedidos.setEnabledAt( 0, false);
       
         try {

                   int codPedido = 12;
                   
                    itemPedido.setCodPedido(codPedido);
                    
                    conn.conecta();
                    ResultSet rs = contr_item.listarItemPedido(itemPedido);
                    DefaultTableModel modelo =  ID.carregarTabela(rs);
                    TabelaItemPedidos.setModel(modelo);
                    TabelaItemPedidos.setSelectionBackground(Color.yellow);
                    
                  ped.setCodPedido(codPedido);
                  contr.BuscaPedido(ped, cli, btnGerarPedido, btnFinalizaPedido,  txtHora,  TxtTotalPedido, TxtCodigoProduto, TxtQuant, cbm_desc, cbm_catProduto, btnAddItem, btnNotaCozinha);
                  
                  
                  itemPedido.setCodItemPedidos(codPedido);
                 contr_item.CalculaTotal(TxtTotalPedido, itemPedido, ped);
                }
                catch (Exception ex){
                    JOptionPane.showMessageDialog(null,"Erro ao buscar dados:"+ex.getMessage());
                }
        
    }//GEN-LAST:event_btnmesa12MouseClicked

    private void btnmesa13MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnmesa13MouseClicked
         me.setCodigoMesa(13);
        
        btnmesa13.setIcon(PD.VerificaStatus(me));
        
        me.setNumMesa(Integer.parseInt(btnmesa13.getText()));
      
            contr.EscolhaDaMesa(lblNumMesa, me);
            AbaPedidos.setEnabledAt( 1, true);
             AbaPedidos.setSelectedIndex(1);
            AbaPedidos.setEnabledAt( 0, false);
       
         try {

                   int codPedido = 13;
                   
                    itemPedido.setCodPedido(codPedido);
                    
                    conn.conecta();
                    ResultSet rs = contr_item.listarItemPedido(itemPedido);
                    DefaultTableModel modelo =  ID.carregarTabela(rs);
                    TabelaItemPedidos.setModel(modelo);
                    TabelaItemPedidos.setSelectionBackground(Color.yellow);
                    
                  ped.setCodPedido(codPedido);
                  contr.BuscaPedido(ped, cli, btnGerarPedido, btnFinalizaPedido,  txtHora,  TxtTotalPedido, TxtCodigoProduto, TxtQuant, cbm_desc, cbm_catProduto, btnAddItem, btnNotaCozinha);
                  
                  
                  itemPedido.setCodItemPedidos(codPedido);
                 contr_item.CalculaTotal(TxtTotalPedido, itemPedido, ped);
                }
                catch (Exception ex){
                    JOptionPane.showMessageDialog(null,"Erro ao buscar dados:"+ex.getMessage());
                }
        
    }//GEN-LAST:event_btnmesa13MouseClicked

    private void btnmesa14MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnmesa14MouseClicked
         me.setCodigoMesa(14);
        
        btnmesa14.setIcon(PD.VerificaStatus(me));
        
        me.setNumMesa(Integer.parseInt(btnmesa14.getText()));
      
            contr.EscolhaDaMesa(lblNumMesa, me);
            AbaPedidos.setEnabledAt( 1, true);
             AbaPedidos.setSelectedIndex(1);
            AbaPedidos.setEnabledAt( 0, false);
       
         try {

                   int codPedido = 14;
                   
                    itemPedido.setCodPedido(codPedido);
                    
                    conn.conecta();
                    ResultSet rs = contr_item.listarItemPedido(itemPedido);
                    DefaultTableModel modelo =  ID.carregarTabela(rs);
                    TabelaItemPedidos.setModel(modelo);
                    TabelaItemPedidos.setSelectionBackground(Color.yellow);
                    
                  ped.setCodPedido(codPedido);
                  contr.BuscaPedido(ped, cli, btnGerarPedido, btnFinalizaPedido,  txtHora,  TxtTotalPedido, TxtCodigoProduto, TxtQuant, cbm_desc, cbm_catProduto, btnAddItem, btnNotaCozinha);
                  
                  
                  itemPedido.setCodItemPedidos(codPedido);
                 contr_item.CalculaTotal(TxtTotalPedido, itemPedido, ped);
                }
                catch (Exception ex){
                    JOptionPane.showMessageDialog(null,"Erro ao buscar dados:"+ex.getMessage());
                }
        
    }//GEN-LAST:event_btnmesa14MouseClicked

    private void btnmesa15MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnmesa15MouseClicked
         me.setCodigoMesa(15);
        
        btnmesa15.setIcon(PD.VerificaStatus(me));
        
        me.setNumMesa(Integer.parseInt(btnmesa15.getText()));
      
            contr.EscolhaDaMesa(lblNumMesa, me);
            AbaPedidos.setEnabledAt( 1, true);
             AbaPedidos.setSelectedIndex(1);
            AbaPedidos.setEnabledAt( 0, false);
       
         try {

                   int codPedido = 15;
                   
                    itemPedido.setCodPedido(codPedido);
                    
                    conn.conecta();
                    ResultSet rs = contr_item.listarItemPedido(itemPedido);
                    DefaultTableModel modelo =  ID.carregarTabela(rs);
                    TabelaItemPedidos.setModel(modelo);
                    TabelaItemPedidos.setSelectionBackground(Color.yellow);
                    
                  ped.setCodPedido(codPedido);
                  contr.BuscaPedido(ped, cli, btnGerarPedido, btnFinalizaPedido,  txtHora,  TxtTotalPedido, TxtCodigoProduto, TxtQuant, cbm_desc, cbm_catProduto, btnAddItem, btnNotaCozinha);
                  
                  itemPedido.setCodItemPedidos(codPedido);
                 contr_item.CalculaTotal(TxtTotalPedido, itemPedido, ped);
                }
                catch (Exception ex){
                    JOptionPane.showMessageDialog(null,"Erro ao buscar dados:"+ex.getMessage());
                }
        
    }//GEN-LAST:event_btnmesa15MouseClicked

    private void btnmesa16MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnmesa16MouseClicked
         me.setCodigoMesa(16);
        
        btnmesa16.setIcon(PD.VerificaStatus(me));
        
        me.setNumMesa(Integer.parseInt(btnmesa16.getText()));
      
            contr.EscolhaDaMesa(lblNumMesa, me);
            AbaPedidos.setEnabledAt( 1, true);
             AbaPedidos.setSelectedIndex(1);
            AbaPedidos.setEnabledAt( 0, false);
       
         try {

                   int codPedido = 16;
                   
                    itemPedido.setCodPedido(codPedido);
                    
                    conn.conecta();
                    ResultSet rs = contr_item.listarItemPedido(itemPedido);
                    DefaultTableModel modelo =  ID.carregarTabela(rs);
                    TabelaItemPedidos.setModel(modelo);
                    TabelaItemPedidos.setSelectionBackground(Color.yellow);
                    
                  ped.setCodPedido(codPedido);
                  contr.BuscaPedido(ped, cli, btnGerarPedido, btnFinalizaPedido,  txtHora,  TxtTotalPedido, TxtCodigoProduto, TxtQuant, cbm_desc, cbm_catProduto, btnAddItem, btnNotaCozinha);
                  
                  
                  itemPedido.setCodItemPedidos(codPedido);
                 contr_item.CalculaTotal(TxtTotalPedido, itemPedido, ped);
                }
                catch (Exception ex){
                    JOptionPane.showMessageDialog(null,"Erro ao buscar dados:"+ex.getMessage());
                }
        
    }//GEN-LAST:event_btnmesa16MouseClicked

    private void btnmesa17MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnmesa17MouseClicked
         me.setCodigoMesa(17);
        
        btnmesa17.setIcon(PD.VerificaStatus(me));
        
        me.setNumMesa(Integer.parseInt(btnmesa17.getText()));
      
            contr.EscolhaDaMesa(lblNumMesa, me);
            AbaPedidos.setEnabledAt( 1, true);
             AbaPedidos.setSelectedIndex(1);
            AbaPedidos.setEnabledAt( 0, false);
       
         try {

                   int codPedido = 17;
                   
                    itemPedido.setCodPedido(codPedido);
                    
                    conn.conecta();
                    ResultSet rs = contr_item.listarItemPedido(itemPedido);
                    DefaultTableModel modelo =  ID.carregarTabela(rs);
                    TabelaItemPedidos.setModel(modelo);
                    TabelaItemPedidos.setSelectionBackground(Color.yellow);
                    
                  ped.setCodPedido(codPedido);
                  contr.BuscaPedido(ped, cli, btnGerarPedido, btnFinalizaPedido,  txtHora,  TxtTotalPedido, TxtCodigoProduto, TxtQuant, cbm_desc, cbm_catProduto, btnAddItem, btnNotaCozinha);
                  
                  
                  itemPedido.setCodItemPedidos(codPedido);
                 contr_item.CalculaTotal(TxtTotalPedido, itemPedido, ped);
                }
                catch (Exception ex){
                    JOptionPane.showMessageDialog(null,"Erro ao buscar dados:"+ex.getMessage());
                }
        
    }//GEN-LAST:event_btnmesa17MouseClicked

    private void btnmesa18MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnmesa18MouseClicked
         me.setCodigoMesa(18);
        
        btnmesa18.setIcon(PD.VerificaStatus(me));
        
        me.setNumMesa(Integer.parseInt(btnmesa18.getText()));
      
            contr.EscolhaDaMesa(lblNumMesa, me);
            AbaPedidos.setEnabledAt( 1, true);
             AbaPedidos.setSelectedIndex(1);
            AbaPedidos.setEnabledAt( 0, false);
       
         try {

                   int codPedido = 18;
                   
                    itemPedido.setCodPedido(codPedido);
                    
                    conn.conecta();
                    ResultSet rs = contr_item.listarItemPedido(itemPedido);
                    DefaultTableModel modelo =  ID.carregarTabela(rs);
                    TabelaItemPedidos.setModel(modelo);
                    TabelaItemPedidos.setSelectionBackground(Color.yellow);
                    
                  ped.setCodPedido(codPedido);
                  contr.BuscaPedido(ped, cli, btnGerarPedido, btnFinalizaPedido,  txtHora,  TxtTotalPedido, TxtCodigoProduto, TxtQuant, cbm_desc, cbm_catProduto, btnAddItem, btnNotaCozinha);
                  
                  
                  itemPedido.setCodItemPedidos(codPedido);
                 contr_item.CalculaTotal(TxtTotalPedido, itemPedido, ped);
                }
                catch (Exception ex){
                    JOptionPane.showMessageDialog(null,"Erro ao buscar dados:"+ex.getMessage());
                }
        
    }//GEN-LAST:event_btnmesa18MouseClicked

    private void btnmesa19MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnmesa19MouseClicked
         me.setCodigoMesa(19);
        
        btnmesa19.setIcon(PD.VerificaStatus(me));
        
        me.setNumMesa(Integer.parseInt(btnmesa19.getText()));
      
            contr.EscolhaDaMesa(lblNumMesa, me);
            AbaPedidos.setEnabledAt( 1, true);
             AbaPedidos.setSelectedIndex(1);
            AbaPedidos.setEnabledAt( 0, false);
       
         try {

                   int codPedido = 19;
                   
                    itemPedido.setCodPedido(codPedido);
                    
                    conn.conecta();
                    ResultSet rs = contr_item.listarItemPedido(itemPedido);
                    DefaultTableModel modelo =  ID.carregarTabela(rs);
                    TabelaItemPedidos.setModel(modelo);
                    TabelaItemPedidos.setSelectionBackground(Color.yellow);
                    
                  ped.setCodPedido(codPedido);
                  contr.BuscaPedido(ped, cli, btnGerarPedido, btnFinalizaPedido,  txtHora,  TxtTotalPedido, TxtCodigoProduto, TxtQuant, cbm_desc, cbm_catProduto, btnAddItem, btnNotaCozinha);
                  
                  
                  itemPedido.setCodItemPedidos(codPedido);
                 contr_item.CalculaTotal(TxtTotalPedido, itemPedido, ped);
                }
                catch (Exception ex){
                    JOptionPane.showMessageDialog(null,"Erro ao buscar dados:"+ex.getMessage());
                }
        
    }//GEN-LAST:event_btnmesa19MouseClicked

    private void btnmesa20MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnmesa20MouseClicked
         me.setCodigoMesa(20);
        
        btnmesa20.setIcon(PD.VerificaStatus(me));
        
        me.setNumMesa(Integer.parseInt(btnmesa20.getText()));
      
            contr.EscolhaDaMesa(lblNumMesa, me);
            AbaPedidos.setEnabledAt( 1, true);
             AbaPedidos.setSelectedIndex(1);
            AbaPedidos.setEnabledAt( 0, false);
       
         try {

                   int codPedido = 20;
                   
                    itemPedido.setCodPedido(codPedido);
                    
                    conn.conecta();
                    ResultSet rs = contr_item.listarItemPedido(itemPedido);
                    DefaultTableModel modelo =  ID.carregarTabela(rs);
                    TabelaItemPedidos.setModel(modelo);
                    TabelaItemPedidos.setSelectionBackground(Color.yellow);
                    
                  ped.setCodPedido(codPedido);
                  contr.BuscaPedido(ped, cli, btnGerarPedido, btnFinalizaPedido,  txtHora,  TxtTotalPedido, TxtCodigoProduto, TxtQuant, cbm_desc, cbm_catProduto, btnAddItem, btnNotaCozinha);
                  
                  
                  itemPedido.setCodItemPedidos(codPedido);
                 contr_item.CalculaTotal(TxtTotalPedido, itemPedido, ped);
                }
                catch (Exception ex){
                    JOptionPane.showMessageDialog(null,"Erro ao buscar dados:"+ex.getMessage());
                }
        
    }//GEN-LAST:event_btnmesa20MouseClicked

    private void btnmesa21MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnmesa21MouseClicked
         me.setCodigoMesa(21);
        
        btnmesa21.setIcon(PD.VerificaStatus(me));
        
        me.setNumMesa(Integer.parseInt(btnmesa21.getText()));
      
            contr.EscolhaDaMesa(lblNumMesa, me);
            AbaPedidos.setEnabledAt( 1, true);
             AbaPedidos.setSelectedIndex(1);
            AbaPedidos.setEnabledAt( 0, false);
       
         try {

                   int codPedido = 21;
                   
                    itemPedido.setCodPedido(codPedido);
                    
                    conn.conecta();
                    ResultSet rs = contr_item.listarItemPedido(itemPedido);
                    DefaultTableModel modelo =  ID.carregarTabela(rs);
                    TabelaItemPedidos.setModel(modelo);
                    TabelaItemPedidos.setSelectionBackground(Color.yellow);
                    
                  ped.setCodPedido(codPedido);
                  contr.BuscaPedido(ped, cli, btnGerarPedido, btnFinalizaPedido,  txtHora,  TxtTotalPedido, TxtCodigoProduto, TxtQuant, cbm_desc, cbm_catProduto, btnAddItem, btnNotaCozinha);
                  
                  
                  itemPedido.setCodItemPedidos(codPedido);
                 contr_item.CalculaTotal(TxtTotalPedido, itemPedido, ped);
                }
                catch (Exception ex){
                    JOptionPane.showMessageDialog(null,"Erro ao buscar dados:"+ex.getMessage());
                }
        
    }//GEN-LAST:event_btnmesa21MouseClicked

    private void btnmesa22MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnmesa22MouseClicked
         me.setCodigoMesa(22);
        
        btnmesa22.setIcon(PD.VerificaStatus(me));
        
        me.setNumMesa(Integer.parseInt(btnmesa22.getText()));
      
            contr.EscolhaDaMesa(lblNumMesa, me);
            AbaPedidos.setEnabledAt( 1, true);
             AbaPedidos.setSelectedIndex(1);
            AbaPedidos.setEnabledAt( 0, false);
       
         try {

                   int codPedido = 22;
                   
                    itemPedido.setCodPedido(codPedido);
                    
                    conn.conecta();
                    ResultSet rs = contr_item.listarItemPedido(itemPedido);
                    DefaultTableModel modelo =  ID.carregarTabela(rs);
                    TabelaItemPedidos.setModel(modelo);
                    TabelaItemPedidos.setSelectionBackground(Color.yellow);
                    
                  ped.setCodPedido(codPedido);
                  contr.BuscaPedido(ped, cli, btnGerarPedido, btnFinalizaPedido,  txtHora,  TxtTotalPedido, TxtCodigoProduto, TxtQuant, cbm_desc, cbm_catProduto, btnAddItem, btnNotaCozinha);
                  
                  itemPedido.setCodItemPedidos(codPedido);
                 contr_item.CalculaTotal(TxtTotalPedido, itemPedido, ped);
                }
                catch (Exception ex){
                    JOptionPane.showMessageDialog(null,"Erro ao buscar dados:"+ex.getMessage());
                }
        
    }//GEN-LAST:event_btnmesa22MouseClicked

    private void btnmesa23MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnmesa23MouseClicked
         me.setCodigoMesa(23);
        
        btnmesa23.setIcon(PD.VerificaStatus(me));
        
        me.setNumMesa(Integer.parseInt(btnmesa23.getText()));
      
            contr.EscolhaDaMesa(lblNumMesa, me);
            AbaPedidos.setEnabledAt( 1, true);
             AbaPedidos.setSelectedIndex(1);
            AbaPedidos.setEnabledAt( 0, false);
       
         try {

                   int codPedido = 23;
                   
                    itemPedido.setCodPedido(codPedido);
                    
                    conn.conecta();
                    ResultSet rs = contr_item.listarItemPedido(itemPedido);
                    DefaultTableModel modelo =  ID.carregarTabela(rs);
                    TabelaItemPedidos.setModel(modelo);
                    TabelaItemPedidos.setSelectionBackground(Color.yellow);
                    
                  ped.setCodPedido(codPedido);
                  contr.BuscaPedido(ped, cli, btnGerarPedido, btnFinalizaPedido,  txtHora,  TxtTotalPedido, TxtCodigoProduto, TxtQuant, cbm_desc, cbm_catProduto, btnAddItem, btnNotaCozinha);
                  
                  
                  itemPedido.setCodItemPedidos(codPedido);
                 contr_item.CalculaTotal(TxtTotalPedido, itemPedido, ped);
                }
                catch (Exception ex){
                    JOptionPane.showMessageDialog(null,"Erro ao buscar dados:"+ex.getMessage());
                }
        
    }//GEN-LAST:event_btnmesa23MouseClicked

    private void btnmesa24MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnmesa24MouseClicked
             me.setCodigoMesa(24);
        
        btnmesa24.setIcon(PD.VerificaStatus(me));
        
            me.setNumMesa(Integer.parseInt(btnmesa24.getText()));
      
            contr.EscolhaDaMesa(lblNumMesa, me);
            AbaPedidos.setEnabledAt( 1, true);
             AbaPedidos.setSelectedIndex(1);
            AbaPedidos.setEnabledAt( 0, false);
       
         try {

                   int codPedido = 24;
                   
                    itemPedido.setCodPedido(codPedido);
                    
                    conn.conecta();
                    ResultSet rs = contr_item.listarItemPedido(itemPedido);
                    DefaultTableModel modelo =  ID.carregarTabela(rs);
                    TabelaItemPedidos.setModel(modelo);
                    TabelaItemPedidos.setSelectionBackground(Color.yellow);
                    
                  ped.setCodPedido(codPedido);
                  contr.BuscaPedido(ped, cli, btnGerarPedido, btnFinalizaPedido,  txtHora,  TxtTotalPedido, TxtCodigoProduto, TxtQuant, cbm_desc, cbm_catProduto, btnAddItem, btnNotaCozinha);
                  
                  
                  
                  itemPedido.setCodItemPedidos(codPedido);
                 contr_item.CalculaTotal(TxtTotalPedido, itemPedido, ped);
                }
                catch (Exception ex){
                    JOptionPane.showMessageDialog(null,"Erro ao buscar dados:"+ex.getMessage());
                }
        
    }//GEN-LAST:event_btnmesa24MouseClicked

    private void btnmesa25MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnmesa25MouseClicked
         me.setCodigoMesa(25);
        
        btnmesa25.setIcon(PD.VerificaStatus(me));
        
        me.setNumMesa(Integer.parseInt(btnmesa25.getText()));
      
            contr.EscolhaDaMesa(lblNumMesa, me);
            AbaPedidos.setEnabledAt( 1, true);
             AbaPedidos.setSelectedIndex(1);
            AbaPedidos.setEnabledAt( 0, false);
       
         try {

                   int codPedido = 25;
                   
                    itemPedido.setCodPedido(codPedido);
                    
                    conn.conecta();
                    ResultSet rs = contr_item.listarItemPedido(itemPedido);
                    DefaultTableModel modelo =  ID.carregarTabela(rs);
                    TabelaItemPedidos.setModel(modelo);
                    TabelaItemPedidos.setSelectionBackground(Color.yellow);
                    
                  ped.setCodPedido(codPedido);
                  contr.BuscaPedido(ped, cli, btnGerarPedido, btnFinalizaPedido,  txtHora,  TxtTotalPedido, TxtCodigoProduto, TxtQuant, cbm_desc, cbm_catProduto, btnAddItem, btnNotaCozinha);
                  
                  
                  itemPedido.setCodItemPedidos(codPedido);
                 contr_item.CalculaTotal(TxtTotalPedido, itemPedido, ped);
                }
                catch (Exception ex){
                    JOptionPane.showMessageDialog(null,"Erro ao buscar dados:"+ex.getMessage());
                }
        
    }//GEN-LAST:event_btnmesa25MouseClicked

    private void btnmesa26MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnmesa26MouseClicked

         me.setCodigoMesa(26);
        
        btnmesa26.setIcon(PD.VerificaStatus(me));
        
         me.setNumMesa(Integer.parseInt(btnmesa26.getText()));
      
            contr.EscolhaDaMesa(lblNumMesa, me);
            AbaPedidos.setEnabledAt( 1, true);
             AbaPedidos.setSelectedIndex(1);
            AbaPedidos.setEnabledAt( 0, false);
       
         try {

                   int codPedido = 26;
                   
                    itemPedido.setCodPedido(codPedido);
                    
                    conn.conecta();
                    ResultSet rs = contr_item.listarItemPedido(itemPedido);
                    DefaultTableModel modelo =  ID.carregarTabela(rs);
                    TabelaItemPedidos.setModel(modelo);
                    TabelaItemPedidos.setSelectionBackground(Color.yellow);
                    
                  ped.setCodPedido(codPedido);
                  contr.BuscaPedido(ped, cli, btnGerarPedido, btnFinalizaPedido,  txtHora,  TxtTotalPedido, TxtCodigoProduto, TxtQuant, cbm_desc, cbm_catProduto, btnAddItem, btnNotaCozinha);
                  
                  
                  itemPedido.setCodItemPedidos(codPedido);
                 contr_item.CalculaTotal(TxtTotalPedido, itemPedido, ped);
                }
                catch (Exception ex){
                    JOptionPane.showMessageDialog(null,"Erro ao buscar dados:"+ex.getMessage());
                }
        
    }//GEN-LAST:event_btnmesa26MouseClicked

    private void btnmesa27MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnmesa27MouseClicked
         me.setCodigoMesa(27);
        
        btnmesa27.setIcon(PD.VerificaStatus(me));
        
        me.setNumMesa(Integer.parseInt(btnmesa27.getText()));
      
            contr.EscolhaDaMesa(lblNumMesa, me);
            AbaPedidos.setEnabledAt( 1, true);
             AbaPedidos.setSelectedIndex(1);
            AbaPedidos.setEnabledAt( 0, false);
       
         try {

                   int codPedido = 27;
                   
                    itemPedido.setCodPedido(codPedido);
                    
                    conn.conecta();
                    ResultSet rs = contr_item.listarItemPedido(itemPedido);
                    DefaultTableModel modelo =  ID.carregarTabela(rs);
                    TabelaItemPedidos.setModel(modelo);
                    TabelaItemPedidos.setSelectionBackground(Color.yellow);
                    
                  ped.setCodPedido(codPedido);
                  contr.BuscaPedido(ped, cli, btnGerarPedido, btnFinalizaPedido,  txtHora,  TxtTotalPedido, TxtCodigoProduto, TxtQuant, cbm_desc, cbm_catProduto, btnAddItem, btnNotaCozinha);
                  
                  
                  itemPedido.setCodItemPedidos(codPedido);
                 contr_item.CalculaTotal(TxtTotalPedido, itemPedido, ped);
                }
                catch (Exception ex){
                    JOptionPane.showMessageDialog(null,"Erro ao buscar dados:"+ex.getMessage());
                }
        
    }//GEN-LAST:event_btnmesa27MouseClicked

    private void btnmesa28MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnmesa28MouseClicked
         me.setCodigoMesa(28);
        
        btnmesa28.setIcon(PD.VerificaStatus(me));
        
        me.setNumMesa(Integer.parseInt(btnmesa28.getText()));
      
            contr.EscolhaDaMesa(lblNumMesa, me);
            AbaPedidos.setEnabledAt( 1, true);
             AbaPedidos.setSelectedIndex(1);
            AbaPedidos.setEnabledAt( 0, false);
       
         try {

                   int codPedido = 28;
                   
                    itemPedido.setCodPedido(codPedido);
                    
                    conn.conecta();
                    ResultSet rs = contr_item.listarItemPedido(itemPedido);
                    DefaultTableModel modelo =  ID.carregarTabela(rs);
                    TabelaItemPedidos.setModel(modelo);
                    TabelaItemPedidos.setSelectionBackground(Color.yellow);
                    
                  ped.setCodPedido(codPedido);
                  contr.BuscaPedido(ped, cli, btnGerarPedido, btnFinalizaPedido,  txtHora,  TxtTotalPedido, TxtCodigoProduto, TxtQuant, cbm_desc, cbm_catProduto, btnAddItem, btnNotaCozinha);
                  
                  
                  itemPedido.setCodItemPedidos(codPedido);
                 contr_item.CalculaTotal(TxtTotalPedido, itemPedido, ped);
                }
                catch (Exception ex){
                    JOptionPane.showMessageDialog(null,"Erro ao buscar dados:"+ex.getMessage());
                }
        
    }//GEN-LAST:event_btnmesa28MouseClicked

    private void btnmesa29MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnmesa29MouseClicked
         me.setCodigoMesa(29);
        
        btnmesa29.setIcon(PD.VerificaStatus(me));
        
        me.setNumMesa(Integer.parseInt(btnmesa29.getText()));
      
            contr.EscolhaDaMesa(lblNumMesa, me);
            AbaPedidos.setEnabledAt( 1, true);
             AbaPedidos.setSelectedIndex(1);
            AbaPedidos.setEnabledAt( 0, false);
       
         try {

                   int codPedido = 29;
                   
                    itemPedido.setCodPedido(codPedido);
                    
                    conn.conecta();
                    ResultSet rs = contr_item.listarItemPedido(itemPedido);
                    DefaultTableModel modelo =  ID.carregarTabela(rs);
                    TabelaItemPedidos.setModel(modelo);
                    TabelaItemPedidos.setSelectionBackground(Color.yellow);
                    
                  ped.setCodPedido(codPedido);
                  contr.BuscaPedido(ped, cli, btnGerarPedido, btnFinalizaPedido,  txtHora,  TxtTotalPedido, TxtCodigoProduto, TxtQuant, cbm_desc, cbm_catProduto, btnAddItem, btnNotaCozinha);
                  
                  
                  itemPedido.setCodItemPedidos(codPedido);
                 contr_item.CalculaTotal(TxtTotalPedido, itemPedido, ped);
                }
                catch (Exception ex){
                    JOptionPane.showMessageDialog(null,"Erro ao buscar dados:"+ex.getMessage());
                }
        
    }//GEN-LAST:event_btnmesa29MouseClicked

    private void btnmesa30MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnmesa30MouseClicked
         me.setCodigoMesa(30);
        
        btnmesa30.setIcon(PD.VerificaStatus(me));
        
        me.setNumMesa(Integer.parseInt(btnmesa30.getText()));
      
            contr.EscolhaDaMesa(lblNumMesa, me);
            AbaPedidos.setEnabledAt( 1, true);
             AbaPedidos.setSelectedIndex(1);
            AbaPedidos.setEnabledAt( 0, false);
       
         try {

                   int codPedido = 30;
                   
                    itemPedido.setCodPedido(codPedido);
                    
                    conn.conecta();
                    ResultSet rs = contr_item.listarItemPedido(itemPedido);
                    DefaultTableModel modelo =  ID.carregarTabela(rs);
                    TabelaItemPedidos.setModel(modelo);
                    TabelaItemPedidos.setSelectionBackground(Color.yellow);
                    
                  ped.setCodPedido(codPedido);
                  contr.BuscaPedido(ped, cli, btnGerarPedido, btnFinalizaPedido,  txtHora,  TxtTotalPedido, TxtCodigoProduto, TxtQuant, cbm_desc, cbm_catProduto, btnAddItem, btnNotaCozinha);
                  
                  
                  itemPedido.setCodItemPedidos(codPedido);
                 contr_item.CalculaTotal(TxtTotalPedido, itemPedido, ped);
                }
                catch (Exception ex){
                    JOptionPane.showMessageDialog(null,"Erro ao buscar dados:"+ex.getMessage());
                }
        
    }//GEN-LAST:event_btnmesa30MouseClicked

    private void TxtPagouActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TxtPagouActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TxtPagouActionPerformed

    private void TxtPagouKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TxtPagouKeyPressed
       float SubTotal = Float.parseFloat(TxtTotalPedido.getText())-Float.parseFloat(TxtPagou.getText());
        TxtSubTotal.setText(String.valueOf(SubTotal));
        
    }//GEN-LAST:event_TxtPagouKeyPressed

    private void btnFinalizaPedidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFinalizaPedidoActionPerformed
        
       
    }//GEN-LAST:event_btnFinalizaPedidoActionPerformed

    private void btnFinalizaPedidoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnFinalizaPedidoMouseClicked
       
       
                   me.setCodigoMesa(Integer.parseInt(lblNumMesa.getText()));
                   me.setStatus("fechado");
                   PD.StatusMesa(me);
            ped.setCodMesa(Integer.parseInt(lblNumMesa.getText()));
            contr_item.AchaCodPedido(ped);

            int codPedido = ped.getCodPedido();
            ID.limpaItemPedido(ped);
            contr.LimpaPedido(ped);
            limpaCampos();
            TxtObs.setText("");
            AbaPedidos.setSelectedIndex(0);
    }//GEN-LAST:event_btnFinalizaPedidoMouseClicked

    private void btnNotaCozinhaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNotaCozinhaActionPerformed
       try {
           
            ped.setCodMesa(Integer.parseInt(lblNumMesa.getText()));
            contr_item.AchaCodPedido(ped);

            int codPedido = ped.getCodPedido();
               ped.setCodMesa(codPedido);
                     JRResultSetDataSource relatResul = new JRResultSetDataSource(PD.CupomFisca(ped));
                     JasperPrint jpPrint = JasperFillManager.fillReport("/home/victor/NetBeansProjects/SGMPR/src/Relatorio/NotaCozinha.jasper", new HashMap(), relatResul);
                     JasperViewer jv = new JasperViewer(jpPrint,false);
                     jv.setVisible(true);
                    
            }
                    catch (Exception ex){
                        JOptionPane.showMessageDialog(null,"Erro ao buscar dados:"+ex.getMessage());
                    }
       
    }//GEN-LAST:event_btnNotaCozinhaActionPerformed
                 
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PedidoGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PedidoGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PedidoGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PedidoGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PedidoGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTabbedPane AbaPedidos;
    private javax.swing.JTable TabelaItemPedidos;
    private javax.swing.JTextField TxtCodigoProduto;
    private javax.swing.JTextField TxtObs;
    private javax.swing.JTextField TxtPagou;
    private javax.swing.JTextField TxtQuant;
    private javax.swing.JTextField TxtSubTotal;
    private javax.swing.JTextField TxtTotalPedido;
    private javax.swing.JButton btnAddItem;
    private javax.swing.JButton btnFinalizaPedido;
    private javax.swing.JButton btnGerarPedido;
    private javax.swing.JButton btnNotaCozinha;
    private javax.swing.JLabel btnmesa1;
    private javax.swing.JLabel btnmesa10;
    private javax.swing.JLabel btnmesa11;
    private javax.swing.JLabel btnmesa12;
    private javax.swing.JLabel btnmesa13;
    private javax.swing.JLabel btnmesa14;
    private javax.swing.JLabel btnmesa15;
    private javax.swing.JLabel btnmesa16;
    private javax.swing.JLabel btnmesa17;
    private javax.swing.JLabel btnmesa18;
    private javax.swing.JLabel btnmesa19;
    private javax.swing.JLabel btnmesa2;
    private javax.swing.JLabel btnmesa20;
    private javax.swing.JLabel btnmesa21;
    private javax.swing.JLabel btnmesa22;
    private javax.swing.JLabel btnmesa23;
    private javax.swing.JLabel btnmesa24;
    private javax.swing.JLabel btnmesa25;
    private javax.swing.JLabel btnmesa26;
    private javax.swing.JLabel btnmesa27;
    private javax.swing.JLabel btnmesa28;
    private javax.swing.JLabel btnmesa29;
    private javax.swing.JLabel btnmesa3;
    private javax.swing.JLabel btnmesa30;
    private javax.swing.JLabel btnmesa4;
    private javax.swing.JLabel btnmesa5;
    private javax.swing.JLabel btnmesa6;
    private javax.swing.JLabel btnmesa7;
    private javax.swing.JLabel btnmesa8;
    private javax.swing.JLabel btnmesa9;
    private javax.swing.JComboBox cbm_catProduto;
    private javax.swing.JComboBox cbm_desc;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTable jTable2;
    private javax.swing.JLabel lblNumMesa;
    private com.toedter.calendar.JDateChooser txtData;
    private javax.swing.JFormattedTextField txtHora;
    private javax.swing.JTextField txtPrecoProd;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables
   

}
